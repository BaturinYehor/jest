{"ast":null,"code":"var _jsxFileName = \"/home/user/IdeaProjects/jest/src/components/Calculator/CalculatorForm.js\";\nimport React from \"react\";\n\nclass CalculatorForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let x = e.target['x'].value;\n      let y = e.target['y'].value;\n      this.calculate(x, y);\n    };\n\n    this.state = {\n      error: \"\",\n      message: \"\"\n    };\n  }\n\n  calculate(x, y) {\n    if (x === \"\" || y === \"\") {\n      this.setState({\n        error: \"x or y value is empty!\"\n      });\n    } else {\n      if (isNaN(x) || isNaN(y)) {\n        this.setState({\n          message: x + y\n        });\n      } else {\n        this.setState({\n          message: parseInt(x) + parseInt(y)\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"get-name-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"fill in the fields, press the button and get the result - a number, if the fields are filled with numbers, a string-concatenation of characters, if the fields are filled with characters\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"x\",\n      placeholder: \"x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.message)))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"y\",\n      placeholder: \"y\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"get-name-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Calculate\"))), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.error)), React.createElement(\"div\", {\n      className: \"row h-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default CalculatorForm;","map":{"version":3,"sources":["/home/user/IdeaProjects/jest/src/components/Calculator/CalculatorForm.js"],"names":["React","CalculatorForm","Component","constructor","props","handleSubmit","e","preventDefault","x","target","value","y","calculate","state","error","message","setState","isNaN","parseInt","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass CalculatorForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            message: \"\"\n        }\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        let x = e.target['x'].value;\n        let y = e.target['y'].value;\n        this.calculate(x, y)\n\n    };\n\n    calculate(x, y) {\n        if (x === \"\" || y === \"\") {\n            this.setState({error: \"x or y value is empty!\"})\n        } else {\n            if (isNaN(x) || isNaN(y)) {\n                this.setState({message: x + y})\n            } else {\n                this.setState({message: parseInt(x) + parseInt(y)})\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"get-name-form\">\n                        <div className=\"row\">\n                            <div className=\"board\">\n                                <div className=\"text\">\n                                    fill in the fields, press the button and get the result - a number, if the fields\n                                    are\n                                    filled with numbers, a string-concatenation of characters, if the fields are filled\n                                    with\n                                    characters\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <input type=\"text\" name=\"x\" placeholder=\"x\"/>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"board\">\n                                    <div className=\"text\">\n                                        {this.state.message}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <input type=\"text\" name=\"y\" placeholder=\"y\"/>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"get-name-button\">\n                                    <button>Calculate</button>\n                                </div>\n                            </div>\n                            <div className=\"error\">\n                                {this.state.error}\n                            </div>\n                        </div>\n                        <div className=\"row h-50\">\n                            <div className=\"col-sm-9\">\n                            </div>\n                            <div className=\"col-sm-1\">\n                                <div className=\"img\"/>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    };\n}\n\nexport default CalculatorForm"]},"metadata":{},"sourceType":"module"}